/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import ClassFiles.Customer;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Dilshan Wimalasuriya
 */
public class CustomerLoggedUpdate extends javax.swing.JInternalFrame {

    /**
     * Creates new form AdminRegister
     * @param name
     * @param username
     * @param tphone
     * @param mail
     */

    private String name1;
    private String username1;
    private String lnum1;
    private String email1;
    private String phonenum1;
    private String addrss1;
    private String points1;
       public CustomerLoggedUpdate() {
        initComponents();
    }

    public CustomerLoggedUpdate(String name1, String username1, String lnum1, String email1, String phonenum1, String addrss1, String points1) {
        initComponents();
        this.name1 = name1;
        this.username1 = username1;
        this.lnum1 = lnum1;
        this.email1 = email1;
        this.phonenum1 = phonenum1;
        this.addrss1 = addrss1;
        this.points1 = points1;
        lname.setText(name1);
        uname.setText(username1);
        email.setText(email1);
        phone.setText(phonenum1);
        dlnum.setText(lnum1);
        addr.setText(addrss1);
        point.setText(points1);
    }
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lname = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        register = new javax.swing.JButton();
        uname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        resetbutton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        dlnum = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        point = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addr = new javax.swing.JTextArea();

        setBorder(null);

        jLabel11.setText("E-mail");

        jLabel12.setText("Phone");

        lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnameActionPerformed(evt);
            }
        });

        phone.setText("947XXXXXXXX");
        phone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                phoneFocusLost(evt);
            }
        });
        phone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phoneMouseClicked(evt);
            }
        });
        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });
        phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phoneKeyPressed(evt);
            }
        });

        jLabel7.setText("Full Name");

        register.setText("Update");
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });

        uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameActionPerformed(evt);
            }
        });

        jLabel8.setText("Username");

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        resetbutton.setText("Reset");
        resetbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbuttonActionPerformed(evt);
            }
        });

        jLabel13.setText("Address");

        dlnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlnumActionPerformed(evt);
            }
        });

        jLabel14.setText("Driving Licence Number");

        point.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pointFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pointFocusLost(evt);
            }
        });
        point.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pointMouseClicked(evt);
            }
        });
        point.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointActionPerformed(evt);
            }
        });
        point.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pointKeyPressed(evt);
            }
        });

        jLabel15.setText("Points");

        addr.setColumns(20);
        addr.setRows(5);
        jScrollPane1.setViewportView(addr);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(26, 26, 26)
                        .addComponent(dlnum))
                    .addComponent(jLabel8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13)
                                .addComponent(jLabel15))
                            .addGap(98, 98, 98)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(point, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(87, 87, 87)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(register, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resetbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(485, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(dlnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(register)
                        .addGap(36, 36, 36)
                        .addComponent(resetbutton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(point, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(289, Short.MAX_VALUE))
        );

        setBounds(-5, -35, 1020, 581);
    }// </editor-fold>//GEN-END:initComponents

    private void lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lnameActionPerformed

    private void phoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneFocusGained
        phone.setText("947");
    }//GEN-LAST:event_phoneFocusGained

    private void phoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneFocusLost

    }//GEN-LAST:event_phoneFocusLost

    private void phoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneMouseClicked
        phone.setText("947");
    }//GEN-LAST:event_phoneMouseClicked

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneActionPerformed

    private void phoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneKeyPressed

    }//GEN-LAST:event_phoneKeyPressed

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed

        String lnam = lname.getText();
        String unam = uname.getText();
        String emai = email.getText();
        String phon = phone.getText();
        String name = lnam;
        String dlnumber = dlnum.getText();
        String address = addr.getText();
        String points = point.getText();

        int atchar = -2;
        int dot = -1;
        for(int x = 0; x< emai.length(); x++)
        {
            if(emai.charAt(x) == '@')
            {
                atchar = x;
            }
            else if (emai.charAt(x) == '.')
            {
                dot = x;
            }
        }

        boolean checkphone = false;

        for (int y=0; y<phon.length(); y++)
        {
            if(Character.isDigit(phon.charAt(y)))
            {
                checkphone = true;
            }
            else
            {
                checkphone = false;
                break;
            }
        }

        boolean checklicence = false;

        for(int x = 1; x<dlnumber.length(); x++)
        {
            if(Character.isDigit(dlnumber.charAt(x)))
            {
                checklicence = true;
            }
            else
            {
                checklicence = false;
                break;
            }
        }
        
        boolean checkpoints = false;
        
        for (int y=0; y<points.length(); y++)
        {
            if(Character.isDigit(points.charAt(y)))
            {
                checkpoints = true;
            }
            else
            {
                checkpoints = false;
                break;
            }
        }

        
        if(lnam.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter a Name");
        }
        else if(unam.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter a Username");
        }
        else if(dlnumber.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter a Driving Licence Number");
        }
        else if(emai.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter an E-mail");
        }
        else if(phon.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter a Phone number");
        }
        else if(address.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter an Address");
        }
        else if ((dot<atchar) || (dot == -1) || (atchar == -2))
        {
            JOptionPane.showMessageDialog(null, "Entered Email is not an valid Email address");
        }
        else if((phon.length()!=11) || (phon.charAt(0) != '9') || (phon.charAt(1) != '4') || (phon.charAt(2) != '7') || (checkphone == false))
        {
            JOptionPane.showMessageDialog(null, "Invalid Phone number. You must use 94700000000 Format");
        }
        else if(dlnumber.charAt(0) != 'B')
        {
            JOptionPane.showMessageDialog(null, "Invalid Driving Licence number. Must Start with letter 'B'");
        }
        else if(dlnumber.length() <6)
        {
            JOptionPane.showMessageDialog(null, "Invalid Driving Licence number. It should contain 6 or more numbers statring with 'B'");
        }
        else if(!checklicence)
        {
            JOptionPane.showMessageDialog(null, "Invalid Driving Licence number. Must contain only numbers after 'B'");
        }
        else if(!checkpoints)
        {
            JOptionPane.showMessageDialog(null, "Points Feild can have only numbers");
        }
        else
        {
            int pointsint = Integer.parseInt(points);
            int x = JOptionPane.showConfirmDialog(null,"Do You Really Want To Update This User?");
            int usernamecheck = username1.compareTo(unam);
            int emailcheck = emai.compareTo(email1);
            int licencecheck = lnum1.compareTo(dlnumber);
            System.out.println("username"+usernamecheck);
            System.out.println("email"+emailcheck);
            System.out.println("licen"+licencecheck);
            boolean usernamechanges = true;
            boolean dlnumberchanges = true;
            boolean emailchanges = true;
            if(x==0)
            {
                
                boolean status = false;
                boolean find = true;
                boolean changes = false;
                Customer cm = new Customer(name,unam,dlnumber,phon,emai,address,pointsint);
                if( (usernamecheck==0) && (emailcheck==0) && (licencecheck==0))
                {
                    System.out.println("all ok");
                    try {
                       status = cm.UpdateCustomer();
                    }
                    catch (SQLException ex) {
                        Logger.getLogger(AdminsInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(status)
                    {
                        CustomerMainControlPanel cmp = new CustomerMainControlPanel();
                        CustomerMainControlPanel.name = name;
                        CustomerMainControlPanel.username = unam;
                        CustomerMainControlPanel.DLnumber = dlnumber;
                        CustomerMainControlPanel.phone = phon;
                        CustomerMainControlPanel.email = emai;
                        CustomerMainControlPanel.address = address;
                        CustomerMainControlPanel.points = points;
                        this.dispose();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Error! Customer Details were Not Updated");
                    }
                    changes = true;
                }
                if(usernamecheck!=0)
                {
                    System.out.println("username");
                    try {
                        find = cm.FindCustomerFromUsername();
                    } catch (SQLException ex) {
                        Logger.getLogger(CustomerLoggedUpdate.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(find)
                    {
                        JOptionPane.showMessageDialog(null, "Cannot Update Customer, username : "+unam+" is unavailabel, Please Enter a Different Username");
                        usernamechanges = false;
                    }
                    else
                    {
                        usernamechanges = true;
                    }
                }
                if(emailcheck!=0)
                {
                    System.out.println("email");
                    try {
                        find = cm.FindCustomerFromEmail();
                    } catch (SQLException ex) {
                        Logger.getLogger(CustomerLoggedUpdate.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(find)
                    {
                        JOptionPane.showMessageDialog(null, "Cannot Update Customer, email : "+emai+" is unavailabel, Please Enter a Different email");
                        emailchanges = false;
                    }
                    else
                    {
                        emailchanges = true;
                    }
                }
                if(licencecheck!=0)
                {
                    System.out.println("licen");
                    try {
                        find = cm.FindCustomerFromDLNumber();
                    } catch (SQLException ex) {
                        Logger.getLogger(CustomerLoggedUpdate.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(find)
                    {
                        JOptionPane.showMessageDialog(null, "Cannot Update Customer, Licence Number : "+dlnumber+" is unavailabel, Please Enter a Different Licence Number");
                        dlnumberchanges = false;
                    }
                    else
                    {
                        dlnumberchanges = true;
                    }
                    
                }
                System.out.println(emailchanges);
                System.out.println(usernamechanges);
                System.out.println(dlnumberchanges);
                if((emailchanges==true)&&(usernamechanges==true)&&(dlnumberchanges==true)&&(changes==false))
                {
                    try {
                       status = cm.UpdateCustomer(username1);
                    }
                    catch (SQLException ex) {
                        Logger.getLogger(AdminsInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(status)
                    {
                        CustomerMainControlPanel cmp = new CustomerMainControlPanel();
                        cmp.name = name;
                        cmp.username = unam;
                        cmp.DLnumber = dlnumber;
                        cmp.phone = phon;
                        cmp.email = emai;
                        cmp.address = address;
                        cmp.points = points;
                        this.dispose();
                    }
                }    
            }    
        }
    }//GEN-LAST:event_registerActionPerformed

    private void unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unameActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void resetbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbuttonActionPerformed
        lname.setText(name1);
        uname.setText(username1);
        email.setText(email1);
        phone.setText(phonenum1);
        dlnum.setText(lnum1);
        addr.setText(addrss1);
        point.setText(points1);
    }//GEN-LAST:event_resetbuttonActionPerformed

    private void dlnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dlnumActionPerformed

    private void pointFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pointFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_pointFocusGained

    private void pointFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pointFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_pointFocusLost

    private void pointMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pointMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_pointMouseClicked

    private void pointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pointActionPerformed

    private void pointKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pointKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_pointKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea addr;
    private javax.swing.JTextField dlnum;
    private javax.swing.JTextField email;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lname;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField point;
    private javax.swing.JButton register;
    private javax.swing.JButton resetbutton;
    private javax.swing.JTextField uname;
    // End of variables declaration//GEN-END:variables
}
