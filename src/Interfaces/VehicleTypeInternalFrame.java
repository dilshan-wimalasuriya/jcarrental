/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import ClassFiles.DBConnect;
import ClassFiles.Model;
import ClassFiles.VehicleType;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Vince Lance
 */
public class VehicleTypeInternalFrame extends javax.swing.JInternalFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    String model2 = null;
    int row = -1;
    
    public VehicleTypeInternalFrame() {
        initComponents();
        con = DBConnect.connect();
        LoaddTable();
    }

    
    public void LoaddTable(){
    
        try {
            String sql = "select typeName as Type_Name,keymoney as Keymoney,dailycharge as Daily_Charge from vehicletype";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            System.out.println(e);
        }
        
    }
    
    public boolean checkDigit(String value){
        boolean x=false;
        int count=0;
        
        for(int i=0;i<value.length();i++){
            if (Character.isDigit(value.charAt(i))){
                x= true;
            }
            else if(value.charAt(i)=='.'){
                count++;
                if(count>1){
                    x=false;
                    break;
                }
                x=true;
            }
            else{
                x= false;
                break;
            }
        }
        
        return x;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        typenamebox = new javax.swing.JTextField();
        keymoneybox = new javax.swing.JTextField();
        dailychargebox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setBorder(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Type Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Key Money");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Daily Charge");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Add Type");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update Type");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete Type");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(93, 93, 93)
                                .addComponent(typenamebox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dailychargebox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(keymoneybox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(104, 104, 104)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jButton1)
                        .addGap(37, 37, 37)
                        .addComponent(jButton2)
                        .addGap(32, 32, 32)
                        .addComponent(jButton3)))
                .addContainerGap(321, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(typenamebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(keymoneybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(dailychargebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(410, Short.MAX_VALUE))
        );

        setBounds(-5, -35, 1252, 833);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String check = typenamebox.getText();
        int x = check.compareTo("");
        if (x==0){
            JOptionPane.showMessageDialog(null, "Cannot Perform Action: A typename should be entered");
        }
        else if(keymoneybox.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Cannot Perform action : Please enter Key Money valeu");
        }
        else if(checkDigit(keymoneybox.getText())==false){
            JOptionPane.showMessageDialog(null, "Cannot Perform action : Invalid Key Money value");
        }
        else if(dailychargebox.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Cannot Perform action : Please enter the daily charge");
        }
        else if(checkDigit(dailychargebox.getText())==false){
            JOptionPane.showMessageDialog(null, "Cannot Perform action : Invalid Daily Charge value");
        }
        else{
            String typename = typenamebox.getText().toUpperCase();
            double keymoney = Double.parseDouble(keymoneybox.getText());
            double dailycharge = Double.parseDouble(dailychargebox.getText());
            VehicleType vt = new VehicleType(typename,keymoney,dailycharge);
            try {
                vt.AddVehicleType();
                LoaddTable();
                typenamebox.setText("");
                keymoneybox.setText("");
                dailychargebox.setText("");
            }
            catch (SQLException ex) {
                Logger.getLogger(AdminsInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int row = -1;
        row = jTable1.getSelectedRow();
        if(row !=-1)
        {
            String check = typenamebox.getText();
            int x = check.compareTo("");
            if (x==0){
                JOptionPane.showMessageDialog(null, "Cannot Perform Action: A typename should be entered");
            }
            else if(keymoneybox.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Cannot Perform action : Please enter Key Money valeu");
            }
            else if(checkDigit(keymoneybox.getText())==false){
                JOptionPane.showMessageDialog(null, "Cannot Perform action : Invalid Key Money value");
            }
            else if(dailychargebox.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Cannot Perform action : Please enter the daily charge");
            }
            else if(checkDigit(dailychargebox.getText())==false){
                JOptionPane.showMessageDialog(null, "Cannot Perform action : Invalid Daily Charge value");
            }
            else{

                row = jTable1.getSelectedRow();
                String prevtypename = jTable1.getValueAt(row, 0).toString();
                String typename = typenamebox.getText().toUpperCase();
                String inputtype = typename;
                int vehicletypecount = -1;
                double keymoney = Double.parseDouble(keymoneybox.getText());
                double dailycharge = Double.parseDouble(dailychargebox.getText());
                VehicleType vt = new VehicleType(typename,keymoney,dailycharge);
                int changes = prevtypename.compareTo(typename);
                if(changes==0)
                {
                    try {
                    vt.UpdateVehicleType();
                    LoaddTable();
                    typenamebox.setText("");
                    keymoneybox.setText("");
                    dailychargebox.setText("");
                    }
                    catch (SQLException ex) {
                        Logger.getLogger(AdminsInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else
                {
                    try {
                        vehicletypecount = vt.FindVehicleTypeCount();
                    } catch (SQLException ex) {
                        Logger.getLogger(VehicleTypeInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(vehicletypecount==0)
                    {
                        try {
                            vt.UpdateVehicleType(prevtypename);
                            LoaddTable();
                            typenamebox.setText("");
                            keymoneybox.setText("");
                            dailychargebox.setText("");
                        } catch (SQLException ex) {
                            Logger.getLogger(VehicleTypeInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Vehicle Type not Updated. Type name : "+typename+" has been taken already");
                    }       
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please Select a Vehicle Type to Update From the List");
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        row = jTable1.getSelectedRow();
        String typename = jTable1.getValueAt(row, 0).toString();
        String inputtype = typename;
        String keymoney = jTable1.getValueAt(row, 1).toString();
        String dailycharge = jTable1.getValueAt(row, 2).toString();
        
        typenamebox.setText(typename);
        keymoneybox.setText(keymoney);
        dailychargebox.setText(dailycharge);
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int row = -1;
        row = jTable1.getSelectedRow();
        if(row !=-1)
        {
            String check = typenamebox.getText();
            int x = check.compareTo("");
            if (x==0){
                JOptionPane.showMessageDialog(null, "Cannot Perform Action: A typename should be entered");
            }
            else if(keymoneybox.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Cannot Perform action : Please enter Key Money valeu");
            }
            else if(checkDigit(keymoneybox.getText())==false){
                JOptionPane.showMessageDialog(null, "Cannot Perform action : Invalid Key Money value");
            }
            else if(dailychargebox.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Cannot Perform action : Please enter the daily charge");
            }
            else if(checkDigit(dailychargebox.getText())==false){
                JOptionPane.showMessageDialog(null, "Cannot Perform action : Invalid Daily Charge value");
            }
            else{
                String typename = typenamebox.getText().toUpperCase();
                double keymoney = Double.parseDouble(keymoneybox.getText());
                double dailycharge = Double.parseDouble(dailychargebox.getText());
                VehicleType vt = new VehicleType(typename,keymoney,dailycharge);
                vt.DeleteVehicleType();
                LoaddTable();
                typenamebox.setText("");
                keymoneybox.setText("");
                dailychargebox.setText("");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please Select a Vehicle Type to Delete From the List");
        }    
        
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dailychargebox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField keymoneybox;
    private javax.swing.JTextField typenamebox;
    // End of variables declaration//GEN-END:variables
}
